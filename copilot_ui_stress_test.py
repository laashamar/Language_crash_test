#!/usr/bin/env python3
"""
Microsoft Copilot UI Stress Test Script

Automatiserer sending av meldinger til Microsoft Copilot for Windows-appen
for √• teste ytelse og stabilitet gjennom en flerspr√•klig samtalesimulering.

Krav:
- Installer pywinauto: pip install pywinauto
- S√∏rg for at Microsoft Copilot er √•pen f√∏r du kj√∏rer skriptet
"""

import time
import random
from pywinauto import Application
from pywinauto.findwindows import ElementNotFoundError
from pywinauto.findbestmatch import MatchErrorimport time
import random
from pywinauto import Application
from pywinauto.findwindows import ElementNotFoundError
from pywinauto.findbestmatch import MatchError

# =============================================================================
# KONFIGURASJON
# =============================================================================

NUMBER_OF_MESSAGES = 50
WAIT_TIME_SECONDS = 3

SAMPLE_MESSAGES = [
    "Hello! How are you today? üòä",
    "Can you help me with a coding problem? ü§îüíª",
    "What's the weather like? ‚òÄÔ∏èüå§Ô∏è‚õÖ",
    "I'm working on a Python project üêç‚ú®",
    "This is a stress test message üß™‚ö°",
    "Thank you for your assistance! üôèüòä",
    "Can you explain machine learning? ü§ñüìö",
    "I love programming! üíñüë®‚Äçüíª",
    "Have a great day! üåüüí´",
    "Testing the UI automation üîß‚öôÔ∏è",
    "Hei! Hvordan har du det i dag? üòäüá≥üá¥",
    "Kan du hjelpe meg med et kodeproblem? ü§îüíª",
    "Hvordan er v√¶ret? ‚òÄÔ∏è‚ùÑÔ∏è",
    "Jeg jobber med et Python-prosjekt üêç‚ú®",
    "Dette er en stresstest-melding üß™‚ö°",
    "Tusen takk for hjelpen! üôèüòä",
    "Kan du forklare maskinl√¶ring? ü§ñüìö",
    "Jeg elsker √• programmere! üíñüë®‚Äçüíª",
    "Ha en flott dag! üåüüí´",
    "Tester UI-automatisering üîß‚öôÔ∏è",
    "Jeg bor i Norge üá≥üá¥üèîÔ∏è",
    "Kaffe og kode er bra üòä‚òïüíª",
    "R√∏dt, gult og gr√∏nt üî¥üü°üü¢",
    "√Ürlighet, √∏l og √•penhet üç∫üí≠",
    "Bj√∏rn g√•r p√• l√∏rdagstur üêªüö∂‚Äç‚ôÇÔ∏è",
    "Hello! Jeg snakker b√•de engelsk og norsk üåçüó£Ô∏è",
    "Machine learning og kunstig intelligens ü§ñüß†",
    "Python programming med √¶, √∏, √• karakterer üêçüìù"
]

# =============================================================================
# VERIFISERTE UI-IDENTIFIKATORER
# =============================================================================

WINDOW_TITLE_REGEX = r"^Copilot.*"  # Matcher alle vinduer som starter med "Copilot"
TEXT_BOX_AUTO_ID = "InputTextBox"
SEND_BUTTON_AUTO_ID = "OldComposerMicButton"

ALT_TEXT_BOX_CONTROL_TYPE = "Edit"
ALT_SEND_BUTTON_NAME = "Snakk med Copilot"

# =============================================================================
# HOVEDFUNKSJON
# =============================================================================

def main():
    print("üöÄ Starter Microsoft Copilot UI Stress Test")
    print(f"üìä Konfigurasjon: {NUMBER_OF_MESSAGES} meldinger, {WAIT_TIME_SECONDS}s mellomrom")
    print("="*60)

    try:
        print("üîó Kobler til Copilot-vindu (regex-match)...")
        app = Application(backend="uia").connect(title_re=WINDOW_TITLE_REGEX)
        window = app.window(title_re=WINDOW_TITLE_REGEX)
        print("‚úÖ Tilkobling til Copilot-vinduet vellykket")

        print("üîÑ Starter meldingssl√∏yfe...")

        for i in range(1, NUMBER_OF_MESSAGES + 1):
            try:
                print(f"üìù Sender melding {i} av {NUMBER_OF_MESSAGES}")
                message = random.choice(SAMPLE_MESSAGES)
                print(f"üí¨ Valgt melding: {message[:50]}{'...' if len(message) > 50 else ''}")

                # Finn tekstfelt
                try:
                    text_box = window.child_window(auto_id=TEXT_BOX_AUTO_ID)
                except ElementNotFoundError:
                    print("‚ö†Ô∏è  Prim√¶r tekstfelt-identifikator feilet, pr√∏ver fallback...")
                    text_box = window.child_window(control_type=ALT_TEXT_BOX_CONTROL_TYPE)

                text_box.click_input()
                text_box.type_keys("^a{BACKSPACE}")
                text_box.type_keys(message, with_spaces=True)
                print("‚úèÔ∏è  Melding skrevet inn")

                # Finn sendeknapp
                try:
                    send_button = window.child_window(auto_id=SEND_BUTTON_AUTO_ID)
                except ElementNotFoundError:
                    print("‚ö†Ô∏è  Prim√¶r sendeknapp feilet, pr√∏ver fallback...")
                    send_button = window.child_window(title=ALT_SEND_BUTTON_NAME)

                send_button.click()
                print("üöÄ Sendeknapp klikket")

                if i < NUMBER_OF_MESSAGES:
                    print(f"‚è≥ Venter {WAIT_TIME_SECONDS} sekunder f√∏r neste melding...")
                    time.sleep(WAIT_TIME_SECONDS)

            except ElementNotFoundError as e:
                print(f"‚ùå UI-element ikke funnet for melding {i}: {e}")
                continue

            except Exception as e:
                print(f"‚ùå Uventet feil ved melding {i}: {e}")
                continue

        print("="*60)
        print("üéâ Stresstest fullf√∏rt!")
        print(f"üìä Totalt sendt: {NUMBER_OF_MESSAGES} meldinger")

    except MatchError:
        print("‚ùå Kunne ikke finne Copilot-vinduet via regex")
        print(f"üí° Sjekk at Copilot kj√∏rer og at tittelen starter med 'Copilot'")
        return

    except Exception as e:
        print(f"‚ùå Uventet feil: {e}")
        return

if __name__ == "__main__":
    main()