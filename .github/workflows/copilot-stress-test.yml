name: Copilot UI Stress Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      number_of_messages:
        description: 'Number of messages to send'
        required: false
        default: '10'
        type: string
      wait_time:
        description: 'Wait time between messages (seconds)'
        required: false
        default: '0.5'
        type: string

jobs:
  # Job for å sjekke syntaks og kjøre enhetstester på Linux
  unit-test-and-syntax-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Installer kun kjerneavhengigheter, PySide6 trengs ikke her
        pip install -r requirements.txt
    - name: Syntax check - Main entrypoint and package
      run: |
        python -m py_compile main.py
        python -m py_compile language_crash_test/*.py
    - name: Run all tests in tests/ folder
      run: |
        python -m unittest discover -s tests

  # Job for å kjøre ende-til-ende test på Windows
  windows-stress-test:
    runs-on: windows-latest
    needs: unit-test-and-syntax-check
    # Kjør kun ved manuell trigger eller spesifikk commit-melding
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && contains(github.event.head_commit.message, '[run-stress-test]'))
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run CLI stress test (smoke test)
      # Kjør med et lite antall meldinger for å verifisere at det starter
      # Forventer at den feiler siden Copilot ikke kjører i CI, så || true er viktig
      run: python main.py --config config.json
    - name: Run debug mode (smoke test)
      # Verifiserer at debug-modus starter
      run: python main.py --debug || true
    - name: Run GUI mode (smoke test with timeout)
      # Starter GUI og avslutter etter 10 sek for å verifisere at det ikke krasjer
      run: timeout 10 python main.py --gui || true

  # Job for å sjekke kodekvalitet (formattering og linting)
  code-quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Check code formatting with black
      # Sjekker alle relevante Python-filer
      run: black --check --diff main.py language_crash_test/ tests/
    
    - name: Check import sorting with isort
      run: isort --check-only --diff main.py language_crash_test/ tests/
    
    - name: Lint with flake8
      run: flake8 --max-line-length=120 --extend-ignore=E203,W503 main.py language_crash_test/ tests/
